{
  "type": "spell",
  "system": {
    "description": {
      "value": "<div class=\"rd__b  rd__b--3\"><div class=\"rd__b  rd__b--3\"><h2 style=\"box-sizing:border-box;user-select:text;margin:0px 0px 0.5rem;padding:0px;font-weight:normal;font-size:1.5em;border-bottom:1px solid var(--color-underline-header);color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;white-space:normal;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><span style=\"font-family:Signika, sans-serif\">Made by Xenophes</span></h2><h3 style=\"box-sizing:border-box;user-select:text;margin:0px 0px 0.5rem;padding:0px;font-weight:normal;font-size:1.25em;border-bottom:none;color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;white-space:normal;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><span style=\"font-family:Signika, sans-serif\">Requires:</span></h3><ul style=\"box-sizing:border-box;user-select:text;margin:0.5em 0px;padding:0px 0px 0px 1.5em;color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-size:13px;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;white-space:normal;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><li style=\"box-sizing:border-box;user-select:text\"><p style=\"box-sizing:border-box;user-select:text;margin:0.5em 0px;margin-block-end:0px\"><span style=\"font-family:Signika, sans-serif\">Sequencer</span></p></li><li style=\"box-sizing:border-box;user-select:text\"><p style=\"box-sizing:border-box;user-select:text;margin:0.5em 0px;margin-block-end:0px\"><span style=\"font-family:Signika, sans-serif\">Automated Animations</span></p></li><li style=\"box-sizing:border-box;user-select:text\"><p><span style=\"font-family:Signika, sans-serif\">Warp Gate</span></p></li><li style=\"box-sizing:border-box;user-select:text\"><p><span style=\"font-family:Signika, sans-serif\">JB2A Free/Patreon</span></p></li></ul></div></div>",
      "chat": ""
    },
    "source": {
      "book": "XGtE",
      "page": "152",
      "license": "",
      "custom": "XGE"
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "1",
      "units": "hour"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "units": "",
      "type": "self",
      "width": null,
      "prompt": true
    },
    "range": {
      "value": 120,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "",
    "attackBonus": "",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "level": 7,
    "school": "evo",
    "properties": [
      "mgc"
    ],
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "name": "Crown of Stars",
  "flags": {
    "plutonium": {
      "page": "spells.html",
      "source": "XGE",
      "hash": "crown%20of%20stars_xge",
      "propDroppable": "spell"
    },
    "midi-qol": {
      "fumbleThreshold": null,
      "effectActivation": false,
      "onUseMacroName": "",
      "rollAttackPerTarget": "default",
      "itemCondition": "",
      "effectCondition": ""
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "autoFailFriendly": false,
      "offHandWeapon": false,
      "autoSaveFriendly": false,
      "confirmTargets": "default",
      "noConcentrationCheck": false
    },
    "itemacro": {
      "macro": {
        "name": "Crown of Stars",
        "type": "script",
        "scope": "global",
        "command": "// requires Sequencer, DAE, ItemMacro, MidiQOL, Automated Animations, Warp Gate, and JB2A Patreon\nconsole.log(args)\nif (args[0] === \"on\" && args.length === 2) {\n    const params = args[1];\n    const sourceToken = canvas.tokens.get(params.tokenId);\n    const sourceActor = game.actors.get(params.actorId);\n    const activeEffect = sourceActor.effects.get(params.effectId);\n    const starFile = \"jb2a.twinkling_stars.points07.white\"; // here to change the effect that's floating around the token\n    const starItem = await sourceActor.items.find(i => i.name === \"Crown of Stars\");\n    const moteNumber = (((params.efData.changes[1].value || 7)-7)*2)+7;\n\n    if (moteNumber === 7) {\n        const moteScale = 0.5\n        let starsSequence = new Sequence()\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 1)\n            .name('StarMoteEffect1')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 2)\n            .name('StarMoteEffect2')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 3)\n            .name('StarMoteEffect3')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 4)\n            .name('StarMoteEffect4')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 5)\n            .name('StarMoteEffect5')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 6)\n            .name('StarMoteEffect6')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 7)\n            .name('StarMoteEffect7')\n        starsSequence.play();\n    };\n\n    if (moteNumber === 9) {\n        const moteScale = 0.45\n        let starsSequence = new Sequence()\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 1)\n            .name('StarMoteEffect1')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 2)\n            .name('StarMoteEffect2')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 3)\n            .name('StarMoteEffect3')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 4)\n            .name('StarMoteEffect4')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 5)\n            .name('StarMoteEffect5')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 6)\n            .name('StarMoteEffect6')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 7)\n            .name('StarMoteEffect7')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 8)\n            .name('StarMoteEffect8')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 9)\n            .name('StarMoteEffect9')\n        starsSequence.play();\n    };\n\n    if (moteNumber === 11) {\n        const moteScale = 0.4\n        let starsSequence = new Sequence()\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 1)\n            .name('StarMoteEffect1')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 2)\n            .name('StarMoteEffect2')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 3)\n            .name('StarMoteEffect3')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 4)\n            .name('StarMoteEffect4')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 5)\n            .name('StarMoteEffect5')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 6)\n            .name('StarMoteEffect6')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 7)\n            .name('StarMoteEffect7')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 8)\n            .name('StarMoteEffect8')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 9)\n            .name('StarMoteEffect9')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 10)\n            .name('StarMoteEffect10')\n        .effect()\n            .file(starFile)\n            .from(sourceToken, { cacheLocation: true })\n            .tieToDocuments(activeEffect)\n            .attachTo(sourceToken)\n            .scale(moteScale)\n            .fadeIn(300)\n            .fadeOut(500)\n            .aboveLighting()\n            .persist()\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 5000, delay: 500 })\n            .loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 4000})\n            .spriteOffset({ x: 0.5 }, { gridUnits: true })\n            .rotate((360 / moteNumber) * 11)\n            .name('StarMoteEffect11')\n        starsSequence.play();\n    }\n\n    const updates = { // ADD LIGHTING\n        token: {\n            light: {\n                alpha: 0.4,\n                animation: {\n                    intensity: 2,\n                    speed: 5,\n                    type: \"torch\"\n                },\n                bright: 40,\n                dim: 80,\n                color: \"#ffd79e\",\n                luminosity: 0.5\n                }\n        },\n        embedded: {\n            Item: {\n                \"Star Mote\": {\n                    name: \"Star Mote\",\n                    img: \"icons/magic/light/projectile-stars-blue.webp\", //here to change star mote icon\n                    type: \"spell\",\n                    flags: {\n                        autoanimations: {\n                            \"version\": 3,\n                            \"killAnim\": false,\n                            \"animLevel\": false,\n                            \"options\": {\n                                \"ammo\": false,\n                                \"rangeType\": \"spell\",\n                                \"variant\": \"01\",\n                                \"enableCustom\": false,\n                                \"repeat\": null,\n                                \"delay\": null\n                            },\n                            \"override\": true,\n                            \"sourceToken\": { \"enable\": false },\n                            \"targetToken\": { \"enable\": false },\n                            \"levels3d\": { \"type\": \"\" },\n                            \"macro\": { \"enable\": false },\n                            \"animType\": \"range\",\n                            \"animation\": \"eldritchblast\",\n                            \"color\": \"lightgreen\", // here for changing color of star mote beam\n                            \"audio\": { \"a01\": { \"enable\": false }},\n                            \"preview\": false,\n                            \"explosions\": { \"enable\": false }\n                        },\n                        itemacro: {\n                            macro: {\n                            command: // ADD CHECK FOR LIGHTING\n                                `const params = args[0];\\n\n                                const sourceToken = canvas.tokens.get(params.tokenId);\\n\n                                const sourceActor = params.actor;\\n\n                                const inFilters = { name: 'StarMoteEffect*', object: sourceToken };\\n\n                                await Sequencer.EffectManager.endEffects(Sequencer.EffectManager.getEffects(inFilters).at(-1).data);\\n\n                                const starsEffect = await sourceActor.effects.find(ef => ef.label === \"Crown of Stars\");\n                                const moteItem = await sourceActor.items.find(i => i.name === \"Star Mote\");\\n\n                                if (moteItem.system.uses.value === 0 && starsEffect) {\\n\n                                    await starsEffect.delete();\\n \n                                };`,\n                            name: \"Star Mote\",\n                            scope: \"global\",\n                            type: \"script\",\n                            }},\n                        \"midi-qol\": {\n                            onUseMacroName: \"[postActiveEffects]ItemMacro\",\n                        }\n                    },\n                    system: {\n                        actionType: 'rsak',\n                        school: 'evo',\n                        level: 0,\n                        preparation: {mode: 'atwill', prepared: true},\n                        damage: { parts: [['4d12', 'radiant']] },\n                        activation: { type: 'bonus', cost: 1 },\n                        duration: { value: null, units: 'inst' },\n                        target: { value: 1, type: 'creature' },\n                        uses: {value: moteNumber, max: moteNumber, per: 'charges'},\n                        components: {vocal: false, somatic: false, material: false, ritual: false, concentration: false},\n                        range: {value: starItem.system.range.value, units: 'ft'},\n                        scaling: {mode: \"none\"},\n                        description: {value: `You can use a bonus action to send one of the motes streaking toward one creature or object within 120 feet of you. When you do so, make a ranged spell attack. On a hit, the target takes [[/r 4d12]] radiant damage. Whether you hit or miss, the mote is expended. The spell ends early if you expend the last mote.`}\n                    }\n                }\n            }\n        }\n    };\n\n    await warpgate.mutate(sourceToken.document, updates, {}, { name: \"Star Mote\" });\n    await ui.notifications.notify(\"Your Star Motes have been created as a spell in your spellbook.\"); // here to change the dialogue that appears when casting the spell\n}\n\nelse if (args[0] === \"off\" && args.length === 2) {\n    const params = args[1];\n    const sourceToken = canvas.tokens.get(params.tokenId);\n    await Sequencer.EffectManager.endEffects({ name: \"*StarMoteEffect*\", objects: sourceToken });\n    await warpgate.revert(sourceToken.document, \"Star Mote\");\n}\n\nif (args.length !== 2) {\n    return;\n}",
        "author": "Y0N8fjuWd5xXW3D6",
        "_id": null,
        "img": "icons/svg/dice-target.svg",
        "folder": null,
        "sort": 0,
        "ownership": {
          "default": 0
        },
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "core": {},
    "exportSource": {
      "world": "waterdeep-dragon-heist-part-deux",
      "system": "dnd5e",
      "coreVersion": "11.315",
      "systemVersion": "3.0.4"
    },
    "dnd5e": {
      "migratedProperties": [
        "vocal",
        "somatic"
      ]
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault"
    },
    "dae": {
      "macro": {
        "name": "Crown of Stars",
        "img": "icons/magic/symbols/runes-star-pentagon-orange.webp",
        "type": "script",
        "scope": "global",
        "command": "",
        "author": "B2BBHntfpytXE8DP",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "autoanimations": {
      "id": "20c957c2-54e7-4e47-8510-29a038955a3b",
      "label": "Crown of Stars JB2A",
      "levels3d": {
        "type": "explosion",
        "data": {
          "color01": "#FFFFFF",
          "color02": "#FFFFFF"
        },
        "sound": {
          "enable": false
        },
        "secondary": {
          "enable": false,
          "data": {
            "color01": "#FFFFFF",
            "color02": "#FFFFFF"
          }
        }
      },
      "macro": {
        "enable": false
      },
      "meleeSwitch": {
        "video": {
          "dbSection": "range",
          "menuType": "weapon",
          "animation": "arrow",
          "variant": "regular",
          "color": "regular"
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "detect": "automatic",
          "range": 2,
          "returning": false,
          "switchType": "on"
        }
      },
      "menu": "melee",
      "primary": {
        "video": {
          "dbSection": "melee",
          "menuType": "weapon",
          "animation": "club",
          "variant": "01",
          "color": "white",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "delay": 0,
          "elevation": 1000,
          "isWait": false,
          "opacity": 1,
          "playbackRate": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "size": 1,
          "zIndex": 1
        }
      },
      "secondary": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": true,
          "isWait": false,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "size": 1.5,
          "zIndex": 1
        }
      },
      "soundOnly": {
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        }
      },
      "source": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "isWait": true,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "size": 1,
          "zIndex": 1
        }
      },
      "target": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "opacity": 1,
          "persistent": false,
          "repeat": 1,
          "repeatDelay": 250,
          "size": 1,
          "unbindAlpha": false,
          "unbindVisibility": false,
          "zIndex": 1
        }
      },
      "isEnabled": false,
      "isCustomized": false,
      "fromAmmo": false,
      "version": 5
    }
  },
  "effects": [
    {
      "origin": "Actor.6GOEqR5w5K6dlIBa.Item.sAOWmCQC0BypRIpf",
      "duration": {
        "seconds": 3600,
        "startTime": null,
        "combat": null,
        "rounds": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "disabled": false,
      "_id": "ChNJjiQpJ8HXoACx",
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "function.MISC.macros.spells.crownOfStars",
          "priority": 20
        },
        {
          "key": "system.details.spellLevel",
          "mode": 0,
          "value": "@item.level",
          "priority": 20
        }
      ],
      "tint": "#ffffff",
      "transfer": false,
      "flags": {
        "dae": {
          "selfTarget": false,
          "selfTargetAlways": true,
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "disableIncapacitated": false,
          "dontApply": false,
          "showIcon": false
        },
        "core": {
          "statusId": ""
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": "",
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false,
          "nameOverride": "",
          "customCheck": "",
          "wallsBlock": "system"
        },
        "dfreds-convenient-effects": {
          "description": ""
        },
        "autoanimations": {
          "id": "29b70109-0f28-4cd9-8afe-144ec5546215",
          "label": "Crown of Stars",
          "activeEffectType": "ontoken",
          "menu": "aefx",
          "macro": {
            "enable": false
          },
          "primary": {
            "video": {
              "dbSection": "static",
              "menuType": "spell",
              "animation": "curewounds",
              "variant": "01",
              "color": "blue",
              "enableCustom": false,
              "customPath": ""
            },
            "options": {
              "addTokenWidth": false,
              "anchor": "0.5",
              "delay": 0,
              "elevation": 1000,
              "fadeIn": 250,
              "fadeOut": 500,
              "isMasked": false,
              "isRadius": false,
              "isWait": false,
              "opacity": 1,
              "persistent": false,
              "playbackRate": 1,
              "playOn": "source",
              "repeat": 1,
              "repeatDelay": 250,
              "size": 1,
              "unbindAlpha": false,
              "unbindVisibility": false,
              "zIndex": 1
            },
            "sound": {
              "enable": false,
              "delay": 0,
              "repeat": 1,
              "repeatDelay": 250,
              "startTime": 0,
              "volume": 0.75
            }
          },
          "secondary": {
            "enable": false,
            "video": {
              "dbSection": "static",
              "menuType": "spell",
              "animation": "curewounds",
              "variant": "01",
              "color": "blue",
              "enableCustom": false,
              "customPath": ""
            },
            "sound": {
              "enable": false,
              "delay": 0,
              "repeat": 1,
              "repeatDelay": 250,
              "startTime": 0,
              "volume": 0.75
            },
            "options": {
              "addTokenWidth": false,
              "anchor": "0.5",
              "contrast": 0,
              "delay": 0,
              "elevation": 1000,
              "fadeIn": 250,
              "fadeOut": 500,
              "isMasked": false,
              "isRadius": true,
              "isWait": false,
              "opacity": 1,
              "repeat": 1,
              "repeatDelay": 250,
              "saturate": 0,
              "size": 1.5,
              "tint": false,
              "tintColor": "#FFFFFF",
              "zIndex": 1
            }
          },
          "soundOnly": {
            "sound": {
              "enable": false,
              "delay": 0,
              "repeat": 1,
              "repeatDelay": 250,
              "startTime": 0,
              "volume": 0.75
            }
          },
          "source": {
            "enable": false,
            "video": {
              "dbSection": "static",
              "menuType": "spell",
              "animation": "curewounds",
              "variant": "01",
              "color": "blue",
              "enableCustom": false,
              "customPath": ""
            },
            "sound": {
              "enable": false,
              "delay": 0,
              "repeat": 1,
              "repeatDelay": 250,
              "startTime": 0,
              "volume": 0.75
            },
            "options": {
              "addTokenWidth": false,
              "anchor": "0.5",
              "contrast": 0,
              "delay": 0,
              "elevation": 1000,
              "fadeIn": 250,
              "fadeOut": 500,
              "isMasked": false,
              "isRadius": false,
              "isWait": true,
              "opacity": 1,
              "repeat": 1,
              "repeatDelay": 250,
              "saturate": 0,
              "size": 1,
              "tint": false,
              "tintColor": "#FFFFFF",
              "zIndex": 1
            }
          },
          "isEnabled": false,
          "isCustomized": false,
          "version": 5
        }
      },
      "name": "Crown of Stars",
      "description": "",
      "statuses": [],
      "_stats": {
        "coreVersion": "12.331",
        "systemId": null,
        "systemVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null,
        "compendiumSource": null,
        "duplicateSource": null
      },
      "img": "icons/magic/symbols/runes-star-pentagon-orange.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!PsIXP2qEzjsRXlsw.ChNJjiQpJ8HXoACx"
    }
  ],
  "img": "icons/magic/symbols/runes-star-pentagon-orange.webp",
  "folder": null,
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "12.331",
    "createdTime": 1668722974545,
    "modifiedTime": 1724961581351,
    "lastModifiedBy": "B2BBHntfpytXE8DP",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "ownership": {
    "default": 0,
    "B2BBHntfpytXE8DP": 3
  },
  "_id": "PsIXP2qEzjsRXlsw",
  "sort": 1800000,
  "_key": "!items!PsIXP2qEzjsRXlsw"
}
