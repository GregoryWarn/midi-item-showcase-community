{
  "name": "Meteor Swarm",
  "type": "spell",
  "img": "icons/magic/fire/projectile-meteor-salvo-heavy-red.webp",
  "system": {
    "description": {
      "value": "<h2 style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track);margin:0px 0px 0.5rem;padding:0px;font-weight:normal;font-size:1.5em;border-bottom:1px solid var(--color-underline-header);color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;white-space:normal;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><span style=\"font-family:Signika, sans-serif\">Made by Tyler</span></h2><h3 style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track);margin:0px 0px 0.5rem;padding:0px;font-weight:normal;font-size:1.25em;border-bottom:none;color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;white-space:normal;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><span style=\"font-family:Signika, sans-serif\">Requires:</span></h3><ul style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track);margin:0.5em 0px;padding:0px 0px 0px 1.5em;color:rgb(25, 24, 19);font-family:Signika, sans-serif;font-size:13px;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:start;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;white-space:normal;text-decoration-thickness:initial;text-decoration-style:initial;text-decoration-color:initial\"><li style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track)\"><p style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track);margin-block-end:0px;margin:0.5em 0px\"><span style=\"font-family:Signika, sans-serif\">Sequencer</span></p></li><li style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track)\"><p style=\"box-sizing:border-box;user-select:text;scrollbar-width:thin;scrollbar-color:var(--color-scrollbar) var(--color-scrollbar-track);margin:0.5em 0px;margin-block-end:0px\"><span style=\"font-family:Signika, sans-serif\">JB2A Free/Patreon</span></p></li></ul>",
      "chat": ""
    },
    "source": {
      "book": "PHB",
      "page": "259",
      "custom": "",
      "license": ""
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "",
      "units": "inst"
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": "",
      "width": null,
      "units": "",
      "type": "",
      "prompt": true
    },
    "range": {
      "value": 1,
      "long": null,
      "units": "mi"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": null,
      "amount": null,
      "scale": false
    },
    "ability": "",
    "actionType": "save",
    "attack": {
      "bonus": "",
      "flat": false
    },
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "20d6[bludgeoning]",
          "bludgeoning"
        ],
        [
          "20d6[fire]",
          "fire"
        ]
      ],
      "versatile": ""
    },
    "enchantment": null,
    "formula": "",
    "save": {
      "ability": "dex",
      "dc": null,
      "scaling": "spell"
    },
    "summons": null,
    "level": 9,
    "school": "evo",
    "properties": [
      "vocal",
      "somatic",
      "mgc"
    ],
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": true
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [],
  "folder": null,
  "flags": {
    "plutonium": {
      "page": "spells.html",
      "source": "PHB",
      "hash": "meteor%20swarm_phb",
      "propDroppable": "spell"
    },
    "core": {},
    "midi-qol": {
      "AoETargetType": "any",
      "AoETargetTypeIncludeSelf": true,
      "autoTarget": "default",
      "rollAttackPerTarget": "default",
      "removeAttackDamageButtons": "default",
      "itemCondition": "",
      "effectCondition": "",
      "onUseMacroName": "[postPreambleComplete]function.MISC.macros.spells.meteorSwarm"
    },
    "midiProperties": {
      "confirmTargets": "default",
      "saveDamage": "default",
      "bonusSaveDamage": "default",
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "noConcentrationCheck": false,
      "toggleEffect": false,
      "ignoreTotalCover": false,
      "idr": false,
      "idi": false,
      "idv": false,
      "ida": false
    },
    "dae": {
      "macro": {
        "name": "Meteor Swarm",
        "img": "icons/magic/fire/projectile-meteor-salvo-heavy-red.webp",
        "type": "script",
        "scope": "global",
        "command": "const config = {\n  gridHighlight: true,\n  icon: {\n    texture: workflow.item.img,\n    borderVisible: false,\n  },\n  snap: {\n    size: 16,\n  },\n  lockDrag: true,\n  label: {\n    text: 'Meteor Swarm (1/4)',\n  },\n  location: {\n    obj: null,\n    limitMinRange: null,\n    limitMaxRange: 5280,\n    showRange: false,\n    lockToEdge: false,\n    lockToEdgeDirection: false,\n    offset: {\n      x: null,\n      y: null,\n    },\n    wallBehavior: 'sight',\n  },\n  lockManualrotation: true,\n};\nconst cancelled = {\n  [Sequencer.Crosshair.CALLBACKS.CANCEL]: () => {\n    workflow.aborted = true;\n    return;\n  },\n};\n\n// Get meteor positions\nconst positionArray = [];\n\nawait workflow.actor.sheet.minimize();\nconst position1 = await Sequencer.Crosshair.show(config, cancelled);\npositionArray.push(position1);\n\nconfig.label.text = 'Meteor Swarm (2/4)';\nconst position2 = await Sequencer.Crosshair.show(config, cancelled);\npositionArray.push(position2);\n\nconfig.label.text = 'Meteor Swarm (3/4)';\nconst position3 = await Sequencer.Crosshair.show(config, cancelled);\npositionArray.push(position3);\n\nconfig.label.text = 'Meteor Swarm (4/4)';\nconst position4 = await Sequencer.Crosshair.show(config, cancelled);\npositionArray.push(position4);\n\n// For every position, see what tokens are inside, then add them to a Set so overlapping positions don't add the same token twice.\nlet targets = new Set();\n\nfor (let pos of positionArray) {\n  let target = await Sequencer.Crosshair.collect(pos, 'Token');\n  for (let t of target) {\n    targets.add(t);\n  }\n}\n\n// Update targets\nawait game.user.updateTokenTargets(Array.from(targets).map((t) => t.id));\n\n// Animate the explositions\nasync function explosions(pos) {\n  /*   let explosionSound = '';\n  if (game.modules.get('dnd5e-animations')?.active) {\n    explosionSound = 'modules/dnd5e-animations/assets/sounds/Damage/Explosion/explosion-echo-5.mp3';\n  } */\n  new Sequence()\n    .effect()\n    .file('jb2a.fireball.explosion.orange')\n    .atLocation({ x: pos.x, y: pos.y })\n    //  .sound()\n    //  .file(explosionSound)\n    .play();\n}\n\n// The delays are just to give the animations a sense of rhythm\nawait explosions(position1);\nawait Sequencer.Helpers.wait(150);\nawait explosions(position2);\nawait Sequencer.Helpers.wait(600);\nawait explosions(position3);\nawait Sequencer.Helpers.wait(450);\nawait explosions(position4);\n\nawait workflow.actor.sheet.maximize();",
        "author": "nWB0GmlNNJen4eKu",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": "dnd5e",
          "systemVersion": "3.3.1",
          "coreVersion": "12.331",
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null,
          "compendiumSource": null,
          "duplicateSource": null
        }
      }
    },
    "itemacro": {
      "macro": {
        "command": "const params = args[0];\nconst config = {\n  size: 16,\n  icon: params.item.img,\n  label: \"Meteor Swarm (1/4)\",\n  interval: 2\n};\n\n// Get meteor positions\nconst positionArray = [];\nconst position1 = await warpgate.crosshairs.show(config);\nif (position1.cancelled) {\n  workflow.aborted = true;\n  return;\n};\nconfig.label = \"Meteor Swarm (2/4)\";\npositionArray.push(position1);\nconst position2 = await warpgate.crosshairs.show(config);\nif (position2.cancelled) {\n  workflow.aborted = true;\n  return;\n};\npositionArray.push(position2);\nconfig.label = \"Meteor Swarm (3/4)\";\nconst position3 = await warpgate.crosshairs.show(config);\nif (position3.cancelled) {\n  workflow.aborted = true;\n  return;\n};\npositionArray.push(position3);\nconfig.label = \"Meteor Swarm (4/4)\";\nconst position4 = await warpgate.crosshairs.show(config);\nif (position4.cancelled) {\n  workflow.aborted = true;\n  return;\n};\npositionArray.push(position4);\n\n// For every position, see what tokens are inside, then add them to a Set so overlapping positions don't add the same token twice.\nlet targets = new Set();\nfor (let pos of positionArray) {\n  let target = await warpgate.crosshairs.collect(pos, \"Token\");\n  for (let t of target) {\n    targets.add(t);\n  };\n};\n\n// Update targets\nawait game.user.updateTokenTargets(Array.from(targets).map(t => t.id));\n\n// Animate the explositions\nasync function explosions(pos) {\n  new Sequence()\n    .effect()\n      .file('jb2a.fireball.explosion.orange')\n      .atLocation({ x: pos.x, y: pos.y })\n      .size(22, { gridUnits: true })\n  .play();\n};\n\n// The delays are just to give the animations a sense of rhythm\nawait explosions(position1);\nawait warpgate.wait(150);\nawait explosions(position2);\nawait warpgate.wait(600);\nawait explosions(position3);\nawait warpgate.wait(450);\nawait explosions(position4);",
        "name": "Meteor Swarm",
        "img": "icons/magic/earth/projectiles-fire-stone-salvo.webp",
        "type": "script",
        "scope": "global",
        "author": "Y0N8fjuWd5xXW3D6",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "exportSource": {
      "world": "patria-2-redemption",
      "system": "dnd5e",
      "coreVersion": "12.331",
      "systemVersion": "3.3.1"
    },
    "scene-packer": {
      "hash": "49068908c58510ba3f90cdb62f8323849e59fee5",
      "sourceId": "Item.gqsUCoL4zsZPSn3u"
    },
    "autoanimations": {
      "id": "4a7b67ea-8da4-4739-9243-6d555bc86472",
      "label": "Meteor Swarm",
      "levels3d": {
        "type": "explosion",
        "data": {
          "color01": "#FFFFFF",
          "color02": "#FFFFFF",
          "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
        },
        "sound": {
          "enable": false
        },
        "secondary": {
          "enable": false,
          "data": {
            "color01": "#FFFFFF",
            "color02": "#FFFFFF",
            "spritePath": "modules/levels-3d-preview/assets/particles/dust.png"
          }
        }
      },
      "macro": {
        "enable": false
      },
      "meleeSwitch": {
        "video": {
          "dbSection": "range",
          "menuType": "weapon",
          "animation": "arrow",
          "variant": "regular",
          "color": "regular"
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "detect": "automatic",
          "range": 2,
          "returning": false,
          "switchType": "on"
        }
      },
      "menu": "melee",
      "primary": {
        "video": {
          "dbSection": "melee",
          "menuType": "weapon",
          "animation": "club",
          "variant": "01",
          "color": "white",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "isWait": false,
          "opacity": 1,
          "playbackRate": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "secondary": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": true,
          "isWait": false,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1.5,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "soundOnly": {
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        }
      },
      "source": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "isWait": true,
          "opacity": 1,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "zIndex": 1
        }
      },
      "target": {
        "enable": false,
        "video": {
          "dbSection": "static",
          "menuType": "spell",
          "animation": "curewounds",
          "variant": "01",
          "color": "blue",
          "enableCustom": false,
          "customPath": ""
        },
        "sound": {
          "enable": false,
          "delay": 0,
          "repeat": 1,
          "repeatDelay": 250,
          "startTime": 0,
          "volume": 0.75
        },
        "options": {
          "addTokenWidth": false,
          "anchor": "0.5",
          "contrast": 0,
          "delay": 0,
          "elevation": 1000,
          "fadeIn": 250,
          "fadeOut": 500,
          "isMasked": false,
          "isRadius": false,
          "opacity": 1,
          "persistent": false,
          "repeat": 1,
          "repeatDelay": 250,
          "saturate": 0,
          "size": 1,
          "tint": false,
          "tintColor": "#FFFFFF",
          "unbindAlpha": false,
          "unbindVisibility": false,
          "zIndex": 1
        }
      },
      "isEnabled": false,
      "isCustomized": false,
      "fromAmmo": false,
      "version": 5
    }
  },
  "_stats": {
    "compendiumSource": null,
    "duplicateSource": null,
    "coreVersion": "12.331",
    "systemId": "dnd5e",
    "systemVersion": "3.3.1",
    "createdTime": 1728334433316,
    "modifiedTime": 1728334433316,
    "lastModifiedBy": "B2BBHntfpytXE8DP"
  },
  "ownership": {
    "default": 0,
    "B2BBHntfpytXE8DP": 3
  },
  "_id": "UWvlX5hVoIBN6FlC",
  "sort": 0,
  "_key": "!items!UWvlX5hVoIBN6FlC"
}
